#!/bin/bash
#Ir치 en /etc/X11/Xsession.d
#El nombre no es al azar, debe ser: XXcustom_script, sin extensiones, sino Xsession no lo procesa.

equipo=$(hostname -s)
usuario=$USER

#Primero comprobamos si estamos dentro del centro educativo y tenemos red, con un timeout de 3 segundos.
ping -c 1 ldap -W 3 > /dev/null 2>&1
if [ $? -eq 0 ]
then
        dominio=$(host -d -t CNAME servidor | grep -e ';servidor\.' | cut -f2 -d".")
	#Determinamos que tipo de equipo es en funci칩n del facter uso. Si no tiene el facter lo consideramos workstation.
	tipo="WORKSTATION"
	if [ -e /usr/bin/facter ]
	then
	      uso=$(facter uso)
              case $uso in
                   "pccole") tipo="PCCOLE"
                   ;;
                   "infolab") tipo="INFOLAB"
                   ;;
                   "siatic") tipo="SIATIC"
                   ;;
                   "portatiles") tipo="PORTATIL"
                   ;;
                   "ltsp") tipo="LTSP"
                   ;;
                   "workstation") tipo="WORKSTATION"
                   ;;
                   # ante la duda, lo consideramos workstation
                   *) tipo="WORKSTATION"
                   ;;
              esac
	fi

	#OJO: aqui el comparador es =. No usar ==, ya que estos scripts NO los ejecuta bash y el == no funciona.
        #Si es un PORTATIL adem치s hay que intentar averiguar en que aula est치 para pasar ese dato.
        if [ $tipo = "PORTATIL" ]
        then
		#Ahora comprobamos si estamos dentro de un aula, haciendo ping al servidor de aula con un timeout de 3 segundos.
                ping -c 1 -W 3 192.168.0.254  > /dev/null 2>&1
                resultado=$?
                aula=""
                if [ $resultado -eq 0 ]
                then
		        #Obtiene el nombre del pc del profesor preguntando al servidor de aula por XMLRPC. Pone un timeout de 5 segundos para obtener respuesta.
			aula=$(python -c "import xmlrpclib; import socket; s = xmlrpclib.Server('http://192.168.0.254:6800'); socket.setdefaulttimeout(5); print s.getHostName(); socket.setdefaulttimeout(None)" 2> /dev/null)

			#Quita el sufijo y el "-", quedando solo el prefijo.
			aula=${aula%-*}
                fi
                test -z $aula && aula="NO"
		peticion="http://ldap.$dominio/controlies/init/registro/login?usuario=$usuario&maquina=$equipo&tipohost=$tipo&aula=$aula"
        else
		peticion="http://ldap.$dominio/controlies/init/registro/login?usuario=$usuario&maquina=$equipo&tipohost=$tipo"    
	fi
        if [ -z "$LTSP_CLIENT" ] #Si no es un thinclient mandamos los datos al servidor para registrarlos. Si es thinclient se mandan desde otro script de la imagen de thinclients.
        then
             actualiza=$(wget -q -O - $peticion 2>/dev/null)
        fi
fi

